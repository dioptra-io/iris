FROM python:3.8
LABEL key="Matthieu Gouel <matthieu.gouel@gmail.com>"

WORKDIR /app

# Compilation tools
RUN apt-get update
RUN apt-get -y install gnupg gcc g++ cmake libboost-all-dev git autoconf automake build-essential
RUN apt-get -y clean all
RUN apt-get update

# Libcperm
RUN git clone https://github.com/lancealt/libcperm.git
RUN cd libcperm && \
    ./autogen.sh && \
    ./configure && \
    make -j8 && \
    make install

# Libtins
RUN DEBIAN_FRONTEND=noninteractive apt-get install -y libpcap-dev libssl-dev
RUN git clone https://github.com/mfontanini/libtins.git
RUN cd libtins && \
    mkdir build && \
    cd build && \
    cmake .. -DLIBTINS_ENABLE_CXX11=1 && \
    make -j8 && \
    make install
RUN ldconfig

# Terashuf
RUN git clone https://github.com/alexandres/terashuf.git
RUN cd terashuf && make -j8 && cd ..
ENV TMPDIR /app/reader/resources/
ENV MEMORY 24

# Clickhouse
WORKDIR /root
RUN git clone https://github.com/artpaul/clickhouse-cpp.git
RUN cd clickhouse-cpp && \
    mkdir build && \
    cd build && \
    cmake .. && \
    make -j8
ARG repository="deb http://repo.yandex.ru/clickhouse/deb/stable/ main/"
RUN apt-get update \
    && apt-get install --yes --no-install-recommends \
        apt-transport-https \
        dirmngr \
        gnupg \
    && mkdir -p /etc/apt/sources.list.d \
    && apt-key adv --keyserver keyserver.ubuntu.com --recv E0C56BD4 \
    && echo $repository > /etc/apt/sources.list.d/clickhouse.list \
    && apt-get update \
    && env DEBIAN_FRONTEND=noninteractive \
        apt-get install --allow-unauthenticated --yes --no-install-recommends \
            clickhouse-client \
            clickhouse-common-static \
            locales \
            tzdata \
    && rm -rf /var/lib/apt/lists/* /var/cache/debconf \
    && apt-get clean

WORKDIR /app

# Diamond-Miner Reader
RUN git clone https://github.com/dioptra-io/diamond-miner-cpp.git reader
RUN mkdir -p reader/resources
COPY statics/excluded_prefixes /app/reader/resources
WORKDIR /app/reader
RUN mkdir build && \
    cd build && \
    cmake .. -DCMAKE_BUILD_TYPE=RelWithDebInfo -DCENTRAL=1 && \
    make -j8

WORKDIR /app

RUN pip install --upgrade pip
RUN pip install poetry uvicorn
RUN poetry config virtualenvs.create false

COPY pyproject.toml pyproject.toml
RUN poetry install --no-root --no-dev

COPY iris iris

RUN mkdir results

CMD ["dramatiq", "iris.worker.hooks", "--watch", "iris/worker"]