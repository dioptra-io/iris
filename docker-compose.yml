version: "3"

services:
  traefik:
    image: "traefik:latest"
    command:
      - "--entrypoints.web.address=:80"
      - "--entrypoints.redis.address=:6379"
      - "--api=true"
      - "--api.insecure=true"
      - "--providers.docker"
    ports:
      - "80:80"
      - "8080:8080"
      - "6379:6379"
    volumes:
      - "/var/run/docker.sock:/var/run/docker.sock:ro"
    networks:
      default:
        aliases:
          - "iris.docker.localhost"
          - "cadvisor.docker.localhost"
          - "grafana.docker.localhost"
          - "loki.docker.localhost"
          - "minio.docker.localhost"
          - "prometheus.docker.localhost"

  clickhouse:
    image: "yandex/clickhouse-server:latest"
    labels:
      - "traefik.enable=false"
    volumes:
      - "./volumes/clickhouse:/var/lib/clickhouse"
    ports:
      - "9000:9000"

  redis:
    image: "redis:latest"
    command: "redis-server --requirepass redispass"
    expose:
      - "6379"
    labels:
      - "traefik.enable=true"
      - "traefik.tcp.routers.redis.entrypoints=redis"
      - "traefik.tcp.routers.redis.rule=HostSNI(`*`)"
    volumes:
      - "./volumes/redis:/data"

  minio:
    image: "minio/minio:latest"
    command: "server /data"
    environment:
      MINIO_ACCESS_KEY: "minioadmin"
      MINIO_SECRET_KEY: "minioadmin"
    labels:
      - "traefik.enable=true"
      - "traefik.http.routers.minio.entrypoints=web"
      - "traefik.http.routers.minio.rule=Host(`minio.docker.localhost`)"
    volumes:
      - "./volumes/minio:/data"

  api:
    build:
      context: .
      dockerfile: "./dockerfiles/iris-api.dockerfile"
    environment:
      API_CORS_ALLOW_ORIGIN: "http://localhost:8081"
      API_ADMIN_USERNAME: "admin"
      API_ADMIN_EMAIL: "admin@iris.docker.localhost"
      API_ADMIN_HASHED_PASSWORD: "$$2b$$12$$DOA6t1HC4zlT/AqFgQcrzuxwcTVAV2HuyZrzxORdBDxhctmMfIbUi"
      REDIS_URL: "redis://default:redispass@redis"
      AWS_S3_HOST: "http://minio.docker.localhost"
      AWS_ACCESS_KEY_ID: "minioadmin"
      AWS_SECRET_ACCESS_KEY: "minioadmin"
      GUNICORN_CMD_ARGS: "--workers 1"
    labels:
      - "traefik.enable=true"
      - "traefik.http.routers.api.entrypoints=web"
      - "traefik.http.routers.api.rule=Host(`iris.docker.localhost`) && PathPrefix(`/api`)"
    volumes:
      - "./iris:/app/iris"
    depends_on:
    - clickhouse
    - loki
    - minio
    - redis

  worker:
    build:
      context: .
      dockerfile: "./dockerfiles/iris-worker.dockerfile"
    environment:
      REDIS_URL: "redis://default:redispass@redis"
      AWS_S3_HOST: "http://minio.docker.localhost"
      AWS_ACCESS_KEY_ID: "minioadmin"
      AWS_SECRET_ACCESS_KEY: "minioadmin"
      WORKER_DEBUG_MODE: "true"
    labels:
      - "traefik.enable=false"
    volumes:
      - "./iris:/app/iris"
    depends_on:
      - clickhouse
      - loki
      - minio
      - redis

  agent:
    build:
      context: .
      dockerfile: "./dockerfiles/iris-agent.dockerfile"
    environment:
      REDIS_URL: "redis://default:redispass@redis"
      AWS_S3_HOST: "http://minio.docker.localhost"
      AWS_ACCESS_KEY_ID: "minioadmin"
      AWS_SECRET_ACCESS_KEY: "minioadmin"
      AGENT_MAX_PROBING_RATE: "100"
      AGENT_DEBUG_MODE: "true"
      AGENT_CARACAL_INTEGRITY_CHECK: "false" # In order to test from Docker for Mac
    cap_add:
      - SYS_PTRACE
    labels:
      - "traefik.enable=false"
    volumes:
      - "./iris:/app/iris"
    depends_on:
      - loki
      - minio
      - redis

  cadvisor:
    image: "gcr.io/google-containers/cadvisor:latest"
    labels:
      - "traefik.enable=true"
      - "traefik.http.routers.cadvisor.entrypoints=web"
      - "traefik.http.routers.cadvisor.rule=Host(`cadvisor.docker.localhost`)"
    volumes:
      - "/:/rootfs:ro"
      - "/var/run/docker.sock:/var/run/docker.sock:ro"
      - "/sys:/sys:ro"
      - "/var/lib/docker/:/var/lib/docker:ro"
      - "/dev/mapper:/dev/mapper:ro"
    privileged: true

  prometheus:
    image: "prom/prometheus:latest"
    command:
      - "--config.file=/etc/prometheus/prometheus.yml"
      - "--storage.tsdb.path=/prometheus"
      - "--storage.tsdb.retention.time=365d"
    labels:
      - "traefik.enable=true"
      - "traefik.http.routers.prometheus.entrypoints=web"
      - "traefik.http.routers.prometheus.rule=Host(`prometheus.docker.localhost`)"
    volumes:
      - "./volumes/prometheus:/prometheus"
      - "./configuration/prometheus/prometheus.dev.yml:/etc/prometheus/prometheus.yml"

  loki:
    image: "grafana/loki:latest"
    command: "-config.file=/etc/loki/loki.yaml"
    labels:
      - "traefik.enable=true"
      - "traefik.http.routers.loki.entrypoints=web"
      - "traefik.http.routers.loki.rule=Host(`loki.docker.localhost`)"
      - "traefik.http.routers.loki.middlewares=loki@docker"
      - "traefik.http.middlewares.loki.basicauth.users=admin:$$2y$$05$$oi6zVY1Gm57OPyPn3QdzdODPbaTeAEc12bWaa.GD.Biuno49bAg26"
    volumes:
      - "./volumes/loki:/loki"
      - "./configuration/loki/loki.dev.yml:/etc/loki/loki.yaml"

  grafana:
    image: "grafana/grafana:latest"
    labels:
      - "traefik.enable=true"
      - "traefik.http.routers.grafana.entrypoints=web"
      - "traefik.http.routers.grafana.rule=Host(`grafana.docker.localhost`)"
      - "traefik.http.services.grafana.loadbalancer.server.port=3000"
    volumes:
      - "./volumes/grafana:/var/lib/grafana"

  node-exporter:
    image: "prom/node-exporter:latest"
    labels:
      - "traefik.enable=false"
