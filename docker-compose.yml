version: "3"

services:
  # Web Entrypoint
  traefik:
    image: docker.io/library/traefik:2.5
    command:
      - "--api.dashboard=true"
      - "--entrypoints.web.address=:80"
      - "--entrypoints.postgres.address=:5432"
      - "--entrypoints.redis.address=:6379"
      - "--entrypoints.clickhouse.address=:9000"
      - "--providers.docker"
    labels:
      - "traefik.http.routers.traefik.entrypoints=web"
      - "traefik.http.routers.traefik.rule=Host(`traefik.docker.localhost`)"
      - "traefik.http.routers.traefik.service=api@internal"
    ports:
      - "80:80"
      - "5432:5432"
      - "6379:6379"
      - "9000:9000"
    volumes:
      - "/var/run/docker.sock:/var/run/docker.sock:ro"
    networks:
      default:
        aliases:
          - "api.docker.localhost"
          - "clickhouse.docker.localhost"
          - "minio.docker.localhost"
          - "minio-console.docker.localhost"
          - "postgres.docker.localhost"
          - "redis.docker.localhost"

  # Control-Plane & Data-Plane
  clickhouse:
    image: ${CLICKHOUSE_IMAGE:-docker.io/yandex/clickhouse-server:21}
    labels:
      # ClickHouse HTTP (8123)
      - traefik.http.routers.clickhouse-http.entrypoints=web
      - traefik.http.routers.clickhouse-http.rule=Host(`clickhouse.docker.localhost`)
      - traefik.http.routers.clickhouse-http.service=clickhouse-http
      - traefik.http.services.clickhouse-http.loadbalancer.server.port=8123
      # ClickHouse Native (9000)
      - traefik.tcp.routers.clickhouse-tcp.entrypoints=clickhouse
      - traefik.tcp.routers.clickhouse-tcp.rule=HostSNI(`*`)
      - traefik.tcp.routers.clickhouse-tcp.service=clickhouse-tcp
      - traefik.tcp.services.clickhouse-tcp.loadbalancer.server.port=9000
    volumes:
      - "./configuration/clickhouse/users.d:/etc/clickhouse-server/users.d:ro"
      - "./configuration/clickhouse/init-db.sh:/docker-entrypoint-initdb.d/init-db.sh"
    #   - "./volumes/clickhouse:/var/lib/clickhouse"

  postgres:
    image: postgres
    environment:
      POSTGRES_USER: iris
      POSTGRES_PASSWORD: iris
    labels:
      - traefik.tcp.routers.postgres.entrypoints=postgres
      - traefik.tcp.routers.postgres.rule=HostSNI(`*`)
      - traefik.tcp.routers.postgres.service=postgres
      - traefik.tcp.services.postgres.loadbalancer.server.port=5432

  redis:
    image: docker.io/library/redis:6
    command: "redis-server --requirepass redispass"
    labels:
      - "traefik.tcp.routers.redis.entrypoints=redis"
      - "traefik.tcp.routers.redis.rule=HostSNI(`*`)"

  minio:
    image: docker.io/minio/minio:latest
    command: "server /data --console-address :9001"
    labels:
      # API
      - "traefik.http.routers.minio.entrypoints=web"
      - "traefik.http.routers.minio.rule=Host(`minio.docker.localhost`)"
      - "traefik.http.routers.minio.service=minio"
      - "traefik.http.services.minio.loadbalancer.server.port=9000"
      # Console
      - "traefik.http.routers.minio-console.entrypoints=web"
      - "traefik.http.routers.minio-console.rule=Host(`minio-console.docker.localhost`)"
      - "traefik.http.routers.minio-console.service=minio-console"
      - "traefik.http.services.minio-console.loadbalancer.server.port=9001"

  # Iris
  agent:
    build:
      context: .
      dockerfile: "./dockerfiles/iris-agent.dockerfile"
    environment:
      AGENT_CARACAL_INTEGRITY_CHECK: "false" # In order to test from Docker for Mac
      AGENT_DEBUG_MODE: "true"
      AGENT_MAX_PROBING_RATE: ${AGENT_MAX_PROBING_RATE:-100}
    volumes:
      - "./iris:/app/iris:ro"
    depends_on:
      - minio
      - redis

  api:
    build:
      context: .
      dockerfile: "./dockerfiles/iris-api.dockerfile"
    environment:
      API_CORS_ALLOW_ORIGIN: "http://localhost:8080"
      GUNICORN_CMD_ARGS: "--workers 1"
    labels:
      - "traefik.http.routers.api.entrypoints=web"
      - "traefik.http.routers.api.rule=Host(`api.docker.localhost`)"
    volumes:
      - "./iris:/app/iris:ro"
    depends_on:
      - clickhouse
      - minio
      - redis

  worker:
    build:
      context: .
      dockerfile: "./dockerfiles/iris-worker.dockerfile"
    environment:
      WORKER_DEBUG_MODE: "true"
    volumes:
      - "./iris:/app/iris:ro"
    depends_on:
      - clickhouse
      - minio
      - redis
