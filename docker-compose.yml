version: "3"

services:
  redis:
    image: redis:latest
    command: redis-server --appendonly yes --requirepass redispass
    volumes:
      - ./volumes/redis:/data

  clickhouse:
    image: "yandex/clickhouse-server:latest"
    volumes:
      - "./volumes/clickhouse:/var/lib/clickhouse"

  minio:
    image: minio/minio:latest
    command: server /data
    volumes:
      - ./volumes/minio:/data

  api:
    build:
      context: .
      dockerfile: ./dockerfiles/Dockerfile-api
    volumes:
      - ./iris:/app/iris
    depends_on:
      - clickhouse
      - loki
      - minio
      - redis

  worker:
    build:
      context: .
      dockerfile: ./dockerfiles/Dockerfile-worker
    volumes:
      - ./iris:/app/iris
    depends_on:
      - clickhouse
      - loki
      - minio
      - redis

  agent:
    build:
      context: .
      dockerfile: ./dockerfiles/Dockerfile-agent
      args:
        DEBUG_ITERATION: 0
    cap_add:
      - SYS_PTRACE
    volumes:
      - ./iris:/app/iris
    depends_on:
      - clickhouse
      - loki
      - minio
      - redis

  prometheus:
    image: prom/prometheus:v2.11.1
    volumes:
      - "./volumes/prometheus:/prometheus"
      - "./configuration/prometheus/prometheus.yml:/etc/prometheus/prometheus.yml"
    command:
      - "--config.file=/etc/prometheus/prometheus.yml"
      - "--storage.tsdb.path=/prometheus"
      - "--storage.tsdb.retention.time=365d"

  loki:
    image: grafana/loki:1.5.0
    command: -config.file=/etc/loki/loki.yaml
    volumes:
      - "./volumes/loki:/loki"
      - "./configuration/loki/loki.yml:/etc/loki/loki.yaml"

  grafana:
    image: grafana/grafana:master
    volumes:
      - "./volumes/grafana:/var/lib/grafana"
